{"version":3,"file":"static/js/190.35b09455.chunk.js","mappings":"0OAIe,SAASA,IACtB,IAAQC,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAAwCE,EAAAA,EAAAA,UAAS,MAAjD,eAAOC,EAAP,KAAqBC,EAArB,KAYA,IAVAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAW,mCAAG,+FACZC,EAAAA,EAAAA,IAAY,CAChBP,QAASA,EACTQ,OAAQ,aACPC,KAAKL,GAJU,2CAAH,qDAMjBE,GACD,GAAE,CAACN,IAECG,EAGL,OACE,yBACmC,IAAhCA,EAAaO,QAAQC,QACpB,sEAEA,wBACGR,EAAaO,QAAQE,KAAI,gBAAGC,EAAH,EAAGA,OAAQC,EAAX,EAAWA,QAASC,EAApB,EAAoBA,GAApB,OACxB,2BACE,wBAAKF,KACL,uBAAIC,MAFGC,EADe,OAUnC,C","sources":["pages/Movies/Reviews/Reviews.jsx"],"sourcesContent":["import { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { getMoviesId } from 'services/themoviedb.services';\n\nexport default function Reviews() {\n  const { movieId } = useParams();\n  const [movieReviews, setMovieReviews] = useState(null);\n\n  useEffect(() => {\n    const createMovie = async () => {\n      await getMoviesId({\n        movieId: movieId,\n        detail: '/reviews',\n      }).then(setMovieReviews);\n    };\n    createMovie();\n  }, [movieId]);\n\n  if (!movieReviews) {\n    return;\n  }\n  return (\n    <div>\n      {movieReviews.results.length === 0 ? (\n        <h3>We don't have any reviews for this movie</h3>\n      ) : (\n        <ul>\n          {movieReviews.results.map(({ author, content, id }) => (\n            <li key={id}>\n              <h3>{author}</h3>\n              <p>{content}</p>\n            </li>\n          ))}\n        </ul>\n      )}\n    </div>\n  );\n}\n"],"names":["Reviews","movieId","useParams","useState","movieReviews","setMovieReviews","useEffect","createMovie","getMoviesId","detail","then","results","length","map","author","content","id"],"sourceRoot":""}
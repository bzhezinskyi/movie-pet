{"version":3,"file":"static/js/256.269b5cd8.chunk.js","mappings":"oQAIaA,GAAaC,EAAAA,EAAAA,IAAOC,EAAAA,GAAPD,CAAH,mGASVE,EAASF,EAAAA,GAAAA,IAAH,gEAING,EAAYH,EAAAA,GAAAA,IAAH,0C,SCXhBI,EAAW,CACf,CAAEC,KAAM,OAAQC,KAAM,QACtB,CAAED,KAAM,SAAUC,KAAM,YAGX,SAASC,IAAgB,IAAD,IACrC,GAA+BC,EAAAA,EAAAA,MAAvBC,EAAR,EAAQA,QAASC,EAAjB,EAAiBA,UACjB,GAA0BC,EAAAA,EAAAA,UAAS,MAAnC,eAAOC,EAAP,KAAcC,EAAd,KACMC,GAAWC,EAAAA,EAAAA,MASjB,IAPAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAW,mCAAG,+FACZC,EAAAA,EAAAA,IAAY,CAAET,QAASA,EAASC,UAAAA,IAAaS,KAAKN,GADtC,2CAAH,qDAGjBI,GACD,GAAE,CAACR,EAASC,IAERE,EAGL,OACE,4BACE,SAAC,KAAD,CAAMQ,GAAE,oBAAEN,EAASO,aAAX,aAAE,EAAgBC,YAAlB,QAA0B,IAAlC,sBAEA,UAACnB,EAAD,YACE,SAACD,EAAD,CACEqB,IAAG,yCAAoCX,EAAMY,aAC7CC,IAAKb,EAAMc,SAEb,4BACE,0BACGd,EAAMc,MADT,KACkBd,EAAMe,aADxB,QAGA,yCAAiBf,EAAMgB,iBACvB,sCACA,uBAAIhB,EAAMiB,YACV,oCACA,uBAAIjB,EAAMkB,OAAOC,KAAI,qBAAGC,IAAH,IAAoBC,KAAK,eAIlD,mDACA,8BACG7B,EAAS2B,KAAI,oBAAG1B,EAAH,EAAGA,KAAMC,EAAT,EAASA,KAAT,OACZ,SAACP,EAAD,CAEEqB,GAAIf,EACJgB,MAAO,CAAEC,KAAI,oBAAER,EAASO,aAAX,aAAE,EAAgBC,YAAlB,QAA0B,KAHzC,SAKGhB,GAJID,EAFK,OAUhB,SAAC,EAAA6B,SAAD,CAAUC,UAAU,sCAApB,UACE,SAAC,KAAD,QAIP,C,mJC9DKC,EAAS,mCACTC,EAAgBC,EAAAA,EAAAA,OAAa,CACjCC,QAAS,iCAGEC,EAAW,mCAAG,kGAAS9B,EAAT,EAASA,UAAW+B,EAApB,EAAoBA,WAApB,SACFJ,EAAcK,IAAd,oBACRhC,EADQ,YACK+B,GAC1B,CACEE,OAAQ,CAAEC,QAASR,EAAQS,SAAU,QAJhB,uBACjBC,EADiB,EACjBA,KADiB,kBAOlBA,GAPkB,2CAAH,sDAUXC,EAAe,mCAAG,sGAASC,MAAAA,OAAT,MAAiB,GAAjB,WACNX,EAAcK,IAAI,gBAAiB,CACxDC,OAAQ,CAAEC,QAASR,EAAQY,MAAAA,EAAOH,SAAU,QAFjB,uBACrBC,EADqB,EACrBA,KADqB,kBAItBA,GAJsB,2CAAH,sDAOf5B,EAAW,mCAAG,sGAAST,EAAT,EAASA,QAASC,EAAlB,EAAkBA,UAAlB,IAA6BuC,OAAAA,OAA7B,MAAsC,GAAtC,WAEFZ,EAAcK,IAAd,WACjBhC,EADiB,YACJD,GADI,OACMwC,GAC3B,CACEN,OAAQ,CAAEC,QAASR,EAAQS,SAAU,QALhB,uBAEjBC,EAFiB,EAEjBA,KAFiB,kBAQlBA,GARkB,2CAAH,qD","sources":["pages/Movies/MovieDetails/MovieDetails.styled.jsx","pages/Movies/MovieDetails/MovieDetails.jsx","services/themoviedb.services.js"],"sourcesContent":["import { NavLink } from 'react-router-dom';\n\nimport styled from 'styled-components';\n\nexport const StyledLink = styled(NavLink)`\n  padding: 5px;\n  color: black;\n\n  &.active {\n    color: orange;\n  }\n`;\n\nexport const Poster = styled.img`\n  width: 200px;\n  margin-right: 10px;\n`;\nexport const Container = styled.div`\n  display: flex;\n`;\n","import { Suspense, useState, useEffect } from 'react';\nimport { Link, Outlet, useParams, useLocation } from 'react-router-dom';\n\nimport { getMoviesId } from 'services/themoviedb.services';\nimport { Container, Poster, StyledLink } from './MovieDetails.styled';\n\nconst navItems = [\n  { href: 'cast', text: 'Cast' },\n  { href: 'revies', text: 'Reviews' },\n];\n\nexport default function MovieDetails() {\n  const { movieId, mediaType } = useParams();\n  const [movie, setMovie] = useState(null);\n  const location = useLocation();\n\n  useEffect(() => {\n    const createMovie = async () => {\n      await getMoviesId({ movieId: movieId, mediaType }).then(setMovie);\n    };\n    createMovie();\n  }, [movieId, mediaType]);\n\n  if (!movie) {\n    return;\n  }\n  return (\n    <div>\n      <Link to={location.state?.from ?? '/'}>Go back</Link>\n\n      <Container>\n        <Poster\n          src={`https://image.tmdb.org/t/p/w500${movie.poster_path}`}\n          alt={movie.title}\n        />\n        <div>\n          <h2>\n            {movie.title} ({movie.release_date})\n          </h2>\n          <p>User Score : {movie.vote_average}</p>\n          <h3>Overviev</h3>\n          <p>{movie.overview}</p>\n          <h3>Genres</h3>\n          <p>{movie.genres.map(({ name }) => name).join(', ')}</p>\n        </div>\n      </Container>\n\n      <p>Additional information</p>\n      <>\n        {navItems.map(({ href, text }) => (\n          <StyledLink\n            key={href}\n            to={href}\n            state={{ from: location.state?.from ?? '/' }}\n          >\n            {text}\n          </StyledLink>\n        ))}\n      </>\n      <Suspense fallback={<p>Loading...</p>}>\n        <Outlet />\n      </Suspense>\n    </div>\n  );\n}\n","import axios from 'axios';\n\nconst keyApi = '9e8b55203cd36bc26921f9fe565ad09d';\nconst themoviedbApi = axios.create({\n  baseURL: 'https://api.themoviedb.org/3',\n});\n\nexport const getTrending = async ({ mediaType, timeWindow }) => {\n  const { data } = await themoviedbApi.get(\n    `/trending/${mediaType}/${timeWindow}`,\n    {\n      params: { api_key: keyApi, language: 'uk' },\n    }\n  );\n  return data;\n};\n\nexport const getSearchMovies = async ({ query = '' }) => {\n  const { data } = await themoviedbApi.get('/search/movie', {\n    params: { api_key: keyApi, query, language: 'uk' },\n  });\n  return data;\n};\n\nexport const getMoviesId = async ({ movieId, mediaType, detail = '' }) => {\n  // '/credits' '/reviews`\n  const { data } = await themoviedbApi.get(\n    `/${mediaType}/${movieId}${detail}`,\n    {\n      params: { api_key: keyApi, language: 'uk' },\n    }\n  );\n  return data;\n};\n"],"names":["StyledLink","styled","NavLink","Poster","Container","navItems","href","text","MovieDetails","useParams","movieId","mediaType","useState","movie","setMovie","location","useLocation","useEffect","createMovie","getMoviesId","then","to","state","from","src","poster_path","alt","title","release_date","vote_average","overview","genres","map","name","join","Suspense","fallback","keyApi","themoviedbApi","axios","baseURL","getTrending","timeWindow","get","params","api_key","language","data","getSearchMovies","query","detail"],"sourceRoot":""}
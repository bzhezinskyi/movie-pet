{"version":3,"file":"static/js/190.fb5502c1.chunk.js","mappings":"0OAIe,SAASA,IACtB,IAAQC,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAAwCE,EAAAA,EAAAA,UAAS,MAAjD,eAAOC,EAAP,KAAqBC,EAArB,KAYA,IAVAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAW,mCAAG,+FACZC,EAAAA,EAAAA,IAAY,CAChBP,QAASA,EACTQ,OAAQ,aACPC,KAAKL,GAJU,2CAAH,qDAMjBE,GACD,GAAE,CAACN,IAECG,EAGL,OACE,yBACmC,IAAhCA,EAAaO,QAAQC,QACpB,sEAEA,wBACGR,EAAaO,QAAQE,KAAI,gBAAGC,EAAH,EAAGA,OAAQC,EAAX,EAAWA,QAASC,EAApB,EAAoBA,GAApB,OACxB,2BACE,wBAAKF,KACL,uBAAIC,MAFGC,EADe,OAUnC,C,mJCnCKC,EAAS,mCACTC,EAAgBC,EAAAA,EAAAA,OAAa,CACjCC,QAAS,iCAGEC,EAAW,mCAAG,kGAASC,EAAT,EAASA,UAAWC,EAApB,EAAoBA,WAApB,SACFL,EAAcM,IAAd,oBACRF,EADQ,YACKC,GAC1B,CACEE,OAAQ,CAAEC,QAAST,EAAQU,SAAU,QAJhB,uBACjBC,EADiB,EACjBA,KADiB,kBAOlBA,GAPkB,2CAAH,sDAUXC,EAAe,mCAAG,sGAASC,MAAAA,OAAT,MAAiB,GAAjB,WACNZ,EAAcM,IAAI,gBAAiB,CACxDC,OAAQ,CAAEC,QAAST,EAAQa,MAAAA,EAAOH,SAAU,QAFjB,uBACrBC,EADqB,EACrBA,KADqB,kBAItBA,GAJsB,2CAAH,sDAOfpB,EAAW,mCAAG,sGAASP,EAAT,EAASA,QAASqB,EAAlB,EAAkBA,UAAlB,IAA6Bb,OAAAA,OAA7B,MAAsC,GAAtC,WAEFS,EAAcM,IAAd,WACjBF,EADiB,YACJrB,GADI,OACMQ,GAC3B,CACEgB,OAAQ,CAAEC,QAAST,EAAQU,SAAU,QALhB,uBAEjBC,EAFiB,EAEjBA,KAFiB,kBAQlBA,GARkB,2CAAH,qD","sources":["pages/Movies/Reviews/Reviews.jsx","services/themoviedb.services.js"],"sourcesContent":["import { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { getMoviesId } from 'services/themoviedb.services';\n\nexport default function Reviews() {\n  const { movieId } = useParams();\n  const [movieReviews, setMovieReviews] = useState(null);\n\n  useEffect(() => {\n    const createMovie = async () => {\n      await getMoviesId({\n        movieId: movieId,\n        detail: '/reviews',\n      }).then(setMovieReviews);\n    };\n    createMovie();\n  }, [movieId]);\n\n  if (!movieReviews) {\n    return;\n  }\n  return (\n    <div>\n      {movieReviews.results.length === 0 ? (\n        <h3>We don't have any reviews for this movie</h3>\n      ) : (\n        <ul>\n          {movieReviews.results.map(({ author, content, id }) => (\n            <li key={id}>\n              <h3>{author}</h3>\n              <p>{content}</p>\n            </li>\n          ))}\n        </ul>\n      )}\n    </div>\n  );\n}\n","import axios from 'axios';\n\nconst keyApi = '9e8b55203cd36bc26921f9fe565ad09d';\nconst themoviedbApi = axios.create({\n  baseURL: 'https://api.themoviedb.org/3',\n});\n\nexport const getTrending = async ({ mediaType, timeWindow }) => {\n  const { data } = await themoviedbApi.get(\n    `/trending/${mediaType}/${timeWindow}`,\n    {\n      params: { api_key: keyApi, language: 'uk' },\n    }\n  );\n  return data;\n};\n\nexport const getSearchMovies = async ({ query = '' }) => {\n  const { data } = await themoviedbApi.get('/search/movie', {\n    params: { api_key: keyApi, query, language: 'uk' },\n  });\n  return data;\n};\n\nexport const getMoviesId = async ({ movieId, mediaType, detail = '' }) => {\n  // '/credits' '/reviews`\n  const { data } = await themoviedbApi.get(\n    `/${mediaType}/${movieId}${detail}`,\n    {\n      params: { api_key: keyApi, language: 'uk' },\n    }\n  );\n  return data;\n};\n"],"names":["Reviews","movieId","useParams","useState","movieReviews","setMovieReviews","useEffect","createMovie","getMoviesId","detail","then","results","length","map","author","content","id","keyApi","themoviedbApi","axios","baseURL","getTrending","mediaType","timeWindow","get","params","api_key","language","data","getSearchMovies","query"],"sourceRoot":""}